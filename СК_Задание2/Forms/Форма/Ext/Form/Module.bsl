&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.ИдентификаторКоманды = "ЗаполнитьАналитикуПоУмолчанию" Тогда
		Если ВладелецФормы.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаОбщая"
			ИЛИ ВладелецФормы.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда

			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ТолькоПросмотр",      Ложь);
			ПараметрыФормы.Вставить("СчетЗатрат",          ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"));
			ПараметрыФормы.Вставить("ПодразделениеЗатрат", ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
			ПараметрыФормы.Вставить("Субконто1",           Неопределено);
			ПараметрыФормы.Вставить("Субконто2",           Неопределено);
			ПараметрыФормы.Вставить("Субконто3",           Неопределено);
			ПараметрыФормы.Вставить("СчетЗатратНУ",        ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"));
			ПараметрыФормы.Вставить("СубконтоНУ1",         Неопределено);
			ПараметрыФормы.Вставить("СубконтоНУ2",         Неопределено);
			ПараметрыФормы.Вставить("СубконтоНУ3",         Неопределено);

			ПараметрыФормы.Вставить("ДатаДокумента",       ВладелецФормы.Объект.Дата);
			ПараметрыФормы.Вставить("Организация",         ВладелецФормы.Объект.Организация);
			
            ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаОповещениеОЗакрытииФормыРедактированияСчетаЗатрат", ЭтотОбъект);
			ОткрытьФорму("ОбщаяФорма.РедактированиеСчетаЗатрат", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещенияОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.РедактированиеСчетаЗатрат" Тогда
		
		ВыбранноеЗначение.Вставить("АналитикаУчета");
		ВыбранноеЗначение.Вставить("АналитикаУчетаЗаполнена");
		ЗаполнитьДобавленныеКолонкиСтрокиАналитикиУчета(ВыбранноеЗначение);
		
		Для Каждого СтрУслуги Из ВладелецФормы.Объект.Услуги Цикл
			ЗаполнитьЗначенияСвойств(СтрУслуги, ВыбранноеЗначение);
		КонецЦикла;
		
		ВладелецФормы.Модифицированность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещениеОЗакрытииФормыРедактированияСчетаЗатрат(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Закрыть();
КонецПроцедуры

//Процедура заимстоввана из формы документа ПТиУ, для корректного отображнеия Аналитики в форме "ФормаДокументаУслуги"
&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиАналитикиУчета(ДанныеСтроки)

	АналитикаУчетаТекст 	= "";
	АналитикаУчетаЗаполнена = Ложь;

	ИспользоватьОднуНоменклатурнуюГруппу = БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу();
	СтроковыеПредставленияСубконто = Новый Структура();
	
	Если ДанныеСтроки.Свойство("СчетЗатрат") Тогда
		Если ЗначениеЗаполнено(ДанныеСтроки.СчетЗатрат) Тогда
			АналитикаУчетаЗаполнена = Истина;
			СвойстваСчета 		    = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(ДанныеСтроки.СчетЗатрат);
			АналитикаУчетаТекст     = АналитикаУчетаТекст + ", " + СвойстваСчета.Код;
			
			Если СвойстваСчета.УчетПоПодразделениям Тогда
				Если ЗначениеЗаполнено(ДанныеСтроки.ПодразделениеЗатрат) Тогда
					ТекстСтроки 		= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСтроки.ПодразделениеЗатрат, "Наименование");
					АналитикаУчетаТекст = АналитикаУчетаТекст + ", " + ТекстСтроки;
				Иначе
					АналитикаУчетаТекст = АналитикаУчетаТекст + ", <...>";
				КонецЕсли;
			КонецЕсли;
			
			Для Н = 1 По СвойстваСчета.КоличествоСубконто Цикл
				ЗначениеСубконто = ДанныеСтроки["Субконто" + Н];
				Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
					ПредставлениеСубконто = "";
					ТипСубконто = ТипЗнч(ЗначениеСубконто);
					Если ИспользоватьОднуНоменклатурнуюГруппу И ТипСубконто = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
						Продолжить;
					ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипСубконто) Тогда
						ПредставлениеСубконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеСубконто, "Представление");
					ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипСубконто) Тогда
						ПредставлениеСубконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеСубконто, "Представление");
					Иначе
						ПредставлениеСубконто = Строка(ЗначениеСубконто);
					КонецЕсли;
					
					СтроковыеПредставленияСубконто.Вставить("ЗначениеСубконто" + Н, ЗначениеСубконто);
					СтроковыеПредставленияСубконто.Вставить("ПредставлениеСубконто" + Н, ПредставлениеСубконто);
					
					АналитикаУчетаТекст = АналитикаУчетаТекст + ", " + ПредставлениеСубконто;
				Иначе
					АналитикаУчетаТекст = АналитикаУчетаТекст + ", <...>";
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
    Если АналитикаУчетаЗаполнена Тогда
		ДанныеСтроки.АналитикаУчета 	 = Сред(АналитикаУчетаТекст, 3);
	КонецЕсли;
	ДанныеСтроки.АналитикаУчетаЗаполнена = АналитикаУчетаЗаполнена;

КонецПроцедуры
